{
  "openapi": "3.0.2",
  "info": {
    "title": "Epaper API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3007/api",
      "description": "Dev server"
    },
    {
      "url": "https://epaper.artsakh.ventures/api",
      "description": "Live server"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Represent the end-user"
    }
  ],
  "components": {
    "schemas": {
      "DefaultMongo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-31T08:00:00.000+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-31T08:00:00.000+00:00"
          },
          "__v": {
            "type": "number",
            "example": 0
          },
          "createBy": {
            "type": "string"
          }
        }
      },
      "Quiz": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-31T08:00:00.000+00:00"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-31T08:45:00.000+00:00"
          },
          "formLink": {
            "type": "string",
            "format": "url",
            "example": "https://example.com/"
          },
          "_class": {
            "type": "string",
            "default": "647afcfd9524a2813008eb90"
          }
        }
      },
      "Class": {
        "type": "object",
        "properties": {
          "codename": {
            "type": "string",
            "default": "123456"
          },
          "subject": {
            "type": "string",
            "default": "CN Web"
          },
          "semester": {
            "type": "integer",
            "minimum": 0,
            "default": 20222
          },
          "studentCount": {
            "type": "integer",
            "minimum": 0,
            "default": 50
          },
          "note": {
            "type": "string",
            "default": "A note"
          }
        }
      },
      "QuizRecord": {
        "type": "object",
        "properties": {
          "quiz": {
            "type": "string",
            "default": "645d04485aa78ee9ac47e189"
          },
          "studentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentInput"
            }
          }
        }
      },
      "QuizRecordResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "submissionCount": {
                "type": "integer",
                "default": "50"
              },
              "classStudentCount": {
                "type": "integer",
                "default": "50"
              }
            }
          },
          {
            "$ref": "#/components/schemas/QuizRecord"
          }
        ]
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserLogin"
          },
          {
            "$ref": "#/components/schemas/UserInfo"
          }
        ]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "default": "example@mailinator.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "default": "12345678"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Nguyễn Văn A"
          },
          "gender": {
            "type": "integer",
            "default": 1
          }
        }
      },
      "UserResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "default": "example@mailinator.com"
              }
            }
          },
          {
            "$ref": "#/components/schemas/UserInfo"
          }
        ]
      },
      "StudentInput": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "string",
            "default": "20001234"
          },
          "studentName": {
            "type": "string",
            "default": "Nguyễn Văn A"
          },
          "ipAddress": {
            "type": "string",
            "format": "ipv6"
          },
          "isValid": {
            "type": "boolean",
            "default": true
          },
          "note": {
            "type": "string",
            "default": "A note"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "default": "65a2bd97f735f08ba5fa6ef8"
          },
          "name": {
            "type": "string",
            "default": "Pi's ESP"
          },
          "ssid": {
            "type": "string",
            "default": "Pi's Network"
          },
          "pass": {
            "type": "string",
            "default": "3.14159265358979"
          },
          "dataID": {
            "type": "string",
            "default": "6597a777005e009822d5eb90"
          },
          "dataName": {
            "type": "string",
            "default": "Thịt Gà Ta"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "createdBy": {
            "type": "string",
            "default": "658c47d0e26a7f86d3e95236"
          }
        }
      },
      "DeviceInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Pi's ESP 2"
          },
          "ssid": {
            "type": "string",
            "default": "Pi's Network"
          },
          "pass": {
            "type": "string",
            "default": "3.14159265358979"
          },
          "dataID": {
            "type": "string",
            "default": "6597a777005e009822d5eb90"
          },
          "dataName": {
            "type": "string",
            "default": "Thịt Gà Ta"
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "DeviceUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "Pi's ESP 2"
          },
          "ssid": {
            "type": "string",
            "default": "Pi's Network"
          },
          "pass": {
            "type": "string",
            "default": "3.14159265358979"
          },
          "dataID": {
            "type": "string",
            "default": ""
          }
        }
      },
      "Data": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "default": "65a2bd97f735f08ba5fa6ef8"
          },
          "type": {
            "type": "string",
            "default": "Product"
          },
          "name": {
            "type": "string",
            "default": "Thịt Gà Ta"
          },
          "input2": {
            "type": "string",
            "default": "Thịt Gà"
          },
          "input3": {
            "type": "string",
            "default": "125.000đ/Kg"
          },
          "deviceID": {
            "type": "string",
            "default": "65a2bd97f735f08ba5fa6ef8"
          },
          "deviceName": {
            "type": "string",
            "default": "Pi's ESP"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "activeStartTime": {
            "type": "integer",
            "default": 1705164295
          },
          "fontStyle": {
            "type": "string",
            "default": "Segoe UI Bold, 12pt"
          },
          "designSchema": {
            "type": "string",
            "default": "Theme 1"
          },
          "activeTimeStamp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "1704867348-1704867393",
              "1704877165-1704905189",
              "1704971564-1704972742"
            ]
          },
          "__v": {
            "type": "integer",
            "default": 0
          }
        }
      },
      "DataInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Product"
          },
          "name": {
            "type": "string",
            "default": "Thịt Gà Ta 1"
          },
          "input2": {
            "type": "string",
            "default": "Thịt Gà"
          },
          "input3": {
            "type": "string",
            "default": "125.000đ/Kg"
          },
          "deviceID": {
            "type": "string",
            "default": "65a2bd97f735f08ba5fa6ef8"
          },
          "deviceName": {
            "type": "string",
            "default": "Pi's ESP"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "activeStartTime": {
            "type": "integer",
            "default": 1705164295
          },
          "fontStyle": {
            "type": "string",
            "default": "Segoe UI Bold, 12pt"
          },
          "designSchema": {
            "type": "string",
            "default": "Theme 1"
          },
          "activeTimeStamp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "1704867348-1704867393",
              "1704877165-1704905189",
              "1704971564-1704972742"
            ]
          }
        }
      },
      "DataUpdate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "Product"
          },
          "name": {
            "type": "string",
            "default": "Thịt Gà Ta 1"
          },
          "input2": {
            "type": "string",
            "default": "Thịt Gà"
          },
          "input3": {
            "type": "string",
            "default": "125.000đ/Kg"
          },
          "deviceID": {
            "type": "string",
            "default": "65a2bd97f735f08ba5fa6ef8"
          },
          "deviceName": {
            "type": "string",
            "default": "Pi's ESP"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "activeStartTime": {
            "type": "integer",
            "default": 1705164295
          },
          "fontStyle": {
            "type": "string",
            "default": "Segoe UI Bold, 12pt"
          },
          "designSchema": {
            "type": "string",
            "default": "Theme 1"
          },
          "activeTimeStamp": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "1704867348-1704867393",
              "1704877165-1704905189",
              "1704971564-1704972742"
            ]
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid Request!"
                }
              }
            }
          }
        }
      }
    }, 
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/quizzes": {
      "get": {
        "tags": ["quiz"],
        "summary": "Get all quizzes",
        "description": "Return all quizzes sort by latest startTime, then createdAt, first",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "_class",
            "in": "query",
            "description": "The class's id required in the results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/DefaultMongo"
                      },
                      {
                        "$ref": "#/components/schemas/QuizResponse"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": ["quiz"],
        "summary": "Create new quiz",
        "description": "Return new quiz created",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "New quiz's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quiz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/Quiz"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/quizzes/{id}": {
      "get": {
        "tags": ["quiz"],
        "summary": "Get quiz by id",
        "description": "Return single quiz",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of quiz to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/QuizResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["quiz"],
        "summary": "Delete quiz by id",
        "description": "Return deleted quiz",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of quiz to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/Quiz"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/classes": {
      "get": {
        "tags": ["class"],
        "summary": "Get all classes",
        "description": "Return all classes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "groupBy",
            "in": "query",
            "description": "Select field to group classes by",
            "schema": {
              "type": "string",
              "default": "semester"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/DefaultMongo"
                      },
                      {
                        "$ref": "#/components/schemas/Class"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "quizzes": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/QuizWithoutClassResponse"
                                },
                                {
                                  "$ref": "#/components/schemas/DefaultMongo"
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": ["class"],
        "summary": "Create new class",
        "description": "Return new class created",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "New class's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Class"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/Class"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/classes/{id}": {
      "delete": {
        "tags": ["class"],
        "summary": "Delete class by id",
        "description": "Return deleted class",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of class to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/Class"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["user"],
        "summary": "Create new user",
        "description": "Return new user created",
        "parameters": [],
        "requestBody": {
          "description": "New user's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Email has been used"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["user"],
        "summary": "Login user",
        "description": "Return user and jwt",
        "parameters": [],
        "requestBody": {
          "description": "Existing user's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/UserResponse"
                    },
                    {
                      "$ref": "#/components/schemas/jwt"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "User and password incorrect"
          }
        }
      }
    },
    "/quizRecords/{quizId}": {
      "get": {
        "tags": ["quizRecord"],
        "summary": "Get quizRecord by quiz's id",
        "description": "Return single quizRecord",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "description": "The quiz's id required in the result",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/QuizRecordResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["quizRecord"],
        "summary": "Update quizRecord's studentList by id",
        "description": "Return single quizRecord before update",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "description": "ID of quizRecord to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "requestBody": {
          "description": "Student's input values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/QuizRecord"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by id",
        "description": "Return single user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Get user by id",
        "description": "Return single user before update",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645d04485aa78ee9ac47e189"
            }
          }
        ],
        "requestBody": {
          "description": "New user's basic infos",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DefaultMongo"
                    },
                    {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": ["device"],
        "summary": "Get all devices",
        "description": "Get all devices",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [{
          "name": "active",
          "in": "query",
          "description": "Filter active or inactive devices",
          "schema": {
            "type": "boolean",
            "example": true
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DefaultMongo"
                          },
                          {
                            "$ref": "#/components/schemas/Device"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": ["device"],
        "summary": "Create new devices",
        "description": "Create new devices",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "New device's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Device"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "tags": ["device"],
        "summary": "Get device by id",
        "description": "Get device by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Device ID",
          "schema": {
            "type": "string",
            "example": "65a2bd97f735f08ba5fa6ef8"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Device"
                    }        
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "tags": ["device"],
        "summary": "Update devices",
        "description": "Update devices",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID",
            "schema": {
              "type": "string",
              "example": "65a2bd97f735f08ba5fa6ef8"
            }
          }
        ],
        "requestBody": {
          "description": "Update Device",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Device"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": ["device"],
        "summary": "Delete device",
        "description": "Delete device",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID",
            "schema": {
              "type": "string",
              "example": "65a2bd97f735f08ba5fa6ef8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Device"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/devices/upgrade": {
      "post": {
        "tags": ["device"],
        "summary": "Upgrade devices",
        "description": "Upgrade devices",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "device",
            "in": "query",
            "description": "Device ID",
            "schema": {
              "type": "string",
              "example": "65a2bd97f735f08ba5fa6ef8"
            }
          }
        ],
        "requestBody": {
          "description": "Upgrade Device",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "File uploaded successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "No file uploaded."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/data": {
      "get": {
        "tags": ["data"],
        "summary": "Get all data",
        "description": "Get all data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [{
          "name": "groupBy",
          "in": "query",
          "description": "Filter active or inactive data",
          "schema": {
            "type": "boolean",
            "example": true
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Data"
                      }
                    },
                    "status": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": ["data"],
        "summary": "Create new data",
        "description": "Create new data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "New data's values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Data"
                      }
                    },
                    "status": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/data/{id}": {
      "get": {
        "tags": ["data"],
        "summary": "Get data by id",
        "description": "Get data by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Data ID",
          "schema": {
            "type": "string",
            "example": "6597a777005e009822d5eb90"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Data"
                    },
                    "status": {
                      "type": "string",
                      "default": "success"
                    }        
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "tags": ["data"],
        "summary": "Update data",
        "description": "Update data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Data ID",
            "schema": {
              "type": "string",
              "example": "6597a777005e009822d5eb90"
            }
          }
        ],
        "requestBody": {
          "description": "Update Data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Data"
                    },
                    "status": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": ["data"],
        "summary": "Delete data",
        "description": "Delete data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device ID",
            "schema": {
              "type": "string",
              "example": "6597a777005e009822d5eb90"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Data"
                    },
                    "status": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  }
}
